{"version":3,"sources":["../../src/debug/renderWhenReady.js"],"names":["React","launchQueue","renderWhenReady","Component","state","ready","Ext","isReady","componentWillMount","push","render","props","isExtJSComponent","onReady","queued","setState"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,cAAc,EAApB;;AAEA;;;;;AAKA,eAAe,SAASC,eAAT,CAAyBC,SAAzB,EAAoC;AAAA;;AAC/C;;AAEA;AAAA;;AAII,2CAAc;AAAA;;AAAA,yDACV,2BADU;;AAGV,kBAAKC,KAAL,GAAa;AACTC,uBAAOC,IAAIC;AADF,aAAb;AAHU;AAMb;;AAVL,0CAYIC,kBAZJ,iCAYyB;AACjB,gBAAI,CAAC,KAAKJ,KAAL,CAAWC,KAAhB,EAAuB;AACnBJ,4BAAYQ,IAAZ,CAAiB,IAAjB;AACH;AACJ,SAhBL;;AAAA,0CAkBIC,MAlBJ,qBAkBa;AACL,mBAAO,KAAKN,KAAL,CAAWC,KAAX,KAAqB,IAArB,IACH,oBAAC,SAAD,EAAe,KAAKM,KAApB,CADJ;AAGH,SAtBL;;AAAA;AAAA,MAA6CX,MAAMG,SAAnD,UAEWS,gBAFX,GAE8B,IAF9B;AAwBH;;AAEDN,IAAIO,OAAJ,CAAY,YAAM;AACd,yBAAmBZ,WAAnB,6GAAgC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAAvBa,MAAuB;;AAC5BA,eAAOC,QAAP,CAAgB,EAAEV,OAAO,IAAT,EAAhB;AACH;AACJ,CAJD","file":"renderWhenReady.js","sourcesContent":["import React from 'react';\n\nconst launchQueue = [];\n\n/**\n * Higher order function that returns a component that waits for a ExtReact to be ready before rendering.\n * @param {class} Component \n * @return {class}\n */\nexport default function renderWhenReady(Component) {\n    debugger;\n\n    return class ExtReactRenderWhenReady extends React.Component {\n\n        static isExtJSComponent = true;\n\n        constructor() {\n            super();\n\n            this.state = {\n                ready: Ext.isReady\n            }\n        }\n\n        componentWillMount() {\n            if (!this.state.ready) {\n                launchQueue.push(this);\n            }\n        }\n\n        render() {\n            return this.state.ready === true && (\n                <Component {...this.props}/>\n            );\n        }\n    }\n}\n\nExt.onReady(() => {\n    for (let queued of launchQueue) {\n        queued.setState({ ready: true });\n    }    \n});"]}