const webpack = require('webpack');
const path = require('path');
const ExtWebpackPlugin = require('{npmScope}/ext-webpack-plugin');
const portfinder = require('portfinder');

module.exports = async function (env) {
  portfinder.basePort = 1962;
  var port = await portfinder.getPortPromise();
  const nodeEnv = env && env.prod ? 'production' : 'development';
  const isProd = nodeEnv === 'production';

  return {
    plugins: [
      new ExtWebpackPlugin(),
      new webpack.HotModuleReplacementPlugin()
    ],
    module: {
      rules: [
        {
          test: /\.js$/,
          exclude: /node_modules/
        }
      ]
    },
    mode: 'development',
    devtool: isProd ? 'source-map' : 'cheap-module-source-map',
    context: path.join(__dirname, './'),
    entry: {
      'app': [
        'react-hot-loader/patch',
        './app.js'
      ]
    },
    output: {
      path: path.resolve(__dirname, './build'),
      filename: '[name].js'
    },
    devServer: {
      contentBase: './',
      historyApiFallback: true,
      host: '127.0.0.1',
      port,
      disableHostCheck: false,
      compress: isProd,
      inline: !isProd,
      hot: false,
      stats: {
        entrypoints: false,
        assets: false,
        children: false,
        chunks: false,
        hash: false,
        modules: false,
        publicPath: false,
        timings: false,
        version: false,
        warnings: false,
        colors: {
          green: '\u001b[32m'
        }
      }
    }
  }
};