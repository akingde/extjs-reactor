{"version":3,"sources":["../src/renderWhenReady.js"],"names":["renderWhenReady","launchQueue","Component","state","ready","Ext","isReady","push","props","React","isExtJSComponent","onReady","queued","setState"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBASwBA,e;;AATxB;;;;;;AAEA,IAAMC,cAAc,EAApB;;AAEA;;;;;AAKe,SAASD,eAAT,CAAyBE,SAAzB,EAAoC;AAAA;;AAE/C;AAAA;;AAII,2CAAc;AAAA;;AAAA;;AAGV,kBAAKC,KAAL,GAAa;AACTC,uBAAOC,IAAIC;AADF,aAAb;AAHU;AAMb;;AAVL;AAAA;AAAA,iDAYyB;AACjB,oBAAI,CAAC,KAAKH,KAAL,CAAWC,KAAhB,EAAuB;AACnBH,gCAAYM,IAAZ,CAAiB,IAAjB;AACH;AACJ;AAhBL;AAAA;AAAA,qCAkBa;AACL,uBAAO,KAAKJ,KAAL,CAAWC,KAAX,KAAqB,IAArB,IACH,8BAAC,SAAD,EAAe,KAAKI,KAApB,CADJ;AAGH;AAtBL;AAAA;AAAA,MAA6CC,gBAAMP,SAAnD,UAEWQ,gBAFX,GAE8B,IAF9B;AAwBH;;AAEDL,IAAIM,OAAJ,CAAY,YAAM;AAAA;AAAA;AAAA;;AAAA;AACd,wDAAmBV,WAAnB,4GAAgC;AAAA,gBAAvBW,MAAuB;;AAC5BA,mBAAOC,QAAP,CAAgB,EAAET,OAAO,IAAT,EAAhB;AACH;AAHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIjB,CAJD","file":"renderWhenReady.js","sourcesContent":["import React from 'react';\n\nconst launchQueue = [];\n\n/**\n * Higher order function that returns a component that waits for a ExtReact to be ready before rendering.\n * @param {class} Component \n * @return {class}\n */\nexport default function renderWhenReady(Component) {\n\n    return class ExtReactRenderWhenReady extends React.Component {\n\n        static isExtJSComponent = true;\n\n        constructor() {\n            super();\n\n            this.state = {\n                ready: Ext.isReady\n            }\n        }\n\n        componentWillMount() {\n            if (!this.state.ready) {\n                launchQueue.push(this);\n            }\n        }\n\n        render() {\n            return this.state.ready === true && (\n                <Component {...this.props}/>\n            );\n        }\n    }\n}\n\nExt.onReady(() => {\n    for (let queued of launchQueue) {\n        queued.setState({ ready: true });\n    }    \n});"]}