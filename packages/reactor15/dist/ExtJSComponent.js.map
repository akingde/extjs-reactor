{"version":3,"sources":["../src/ExtJSComponent.js"],"names":["Ext","window","CLASS_CACHE","Grid","ClassManager","getByAlias","Column","Button","Menu","ToolTip","CellBase","get","WidgetCell","Dialog","Field","FitLayout","TabPanel","RendererCell","ExtJSComponent","element","cmp","el","_flags","_hostNode","_hostParent","_renderedChildren","_hostContainerInfo","_currentElement","_topLevelWrapper","displayName","unmountSafely","process","env","NODE_ENV","_renderedNodeType","ReactNodeTypes","HOST","_renderedComponent","toJSON","transaction","nativeParent","nativeContainerInfo","context","renderToDOMNode","_node","config","_createInitialConfig","result","_renderRootComponent","createExtJSComponent","node","Object","defineProperty","on","unmountChildren","_precacheNode","nextComponent","destroyed","props","_rushProps","updateChildren","_applyDefaults","_applyProps","safely","destroying","$reactorConfig","parentCmp","getParentCmp","indexInParent","indexOf","items","reactorSettings","debug","console","log","$className","navigation","View","pop","destroy","_extIndexInParent","_extParent","height","width","renderTo","isClassic","updateLayout","dom","renderElement","children","defaults","Children","map","child","type","prototype","_createConfig","_ensureResponsivePlugin","dockedItems","mountChildren","i","length","item","Base","prop","_propForChildElement","value","array","name","push","dock","wrapDOMElement","Error","rel","extJSClass","isAssignableFrom","Component","_cloneConfig","initialConfig","xclass","propName","match","slice","toLowerCase","includeEvents","_cloneProps","listeners","key","hasOwnProperty","eventName","_eventNameForProp","replace","renderer","cell","xtype","responsiveConfig","plugins","Array","isArray","resposive","responsive","oldProps","newProps","rushConfigs","__reactorUpdateConfigsBeforeChildren","oldConfigs","newConfigs","keys","oldValue","newValue","_replaceEvent","setter","_setterFor","oldHandler","newHandler","un","_capitalize","str","Flags","hasCachedChildNodes","_doPrecacheNode","single","_extCmp","n","found","$createdByReactor","indexInChildren","forEach","propForChild","index","isArrayDelete","getter","_getterFor","currentValue","filter","undefined","splice","_toArrayConfigIndex","concat","_reactorIgnoreOrder","layout","ContainerMixin","ReactMultiChild","Mixin","moveChild","afterNode","toIndex","lastIndex","_ignoreChildrenOrder","_mountIndex","childComponent","toComponent","getHostNode","_mergeConfig","insertDocked","docked","floated","positioned","remove","newIndex","_toReactChildIndex","insert","createChild","childNode","removeChild","HTMLElement","contentEl","cls","DOMLazyTree","insertTreeBefore","target","document","createElement","subClass","parentClass","getParent","ownerCt","oldReplaceNodeWithMarkup","ReactComponentEnvironment","replaceNodeWithMarkup","oldChild","markup","newChild","parent","apply","arguments"],"mappings":"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","file":"ExtJSComponent.js","sourcesContent":["import ReactDOM from 'react-dom'; // need to ensure ReactDOM is loaded before patching ReactComponentEnvironment.replaceNodeWithMarkup\nimport ReactComponentEnvironment from 'react-dom/lib/ReactComponentEnvironment';\nimport { Component, Children, cloneElement } from 'react';\nimport ReactMultiChild from 'react-dom/lib/ReactMultiChild';\nimport DOMLazyTree from 'react-dom/lib/DOMLazyTree';\nimport { precacheNode } from 'react-dom/lib/ReactDOMComponentTree';\nimport Flags from 'react-dom/lib/ReactDOMComponentFlags';\nimport union from 'lodash.union';\nimport capitalize from 'lodash.capitalize'\nimport defaults from 'lodash.defaults';\nimport cloneDeepWith from 'lodash.clonedeepwith';\nimport isEqual from 'lodash.isequal';\nimport toJSON, { ReactNodeTypes } from './toJSON';\n\nconst Ext = window.Ext;\n\nconst CLASS_CACHE = {\n    Grid: Ext.ClassManager.getByAlias('widget.grid'),\n    Column: Ext.ClassManager.getByAlias('widget.gridcolumn'),\n    Button: Ext.ClassManager.getByAlias('widget.button'),\n    Menu: Ext.ClassManager.getByAlias('widget.menu'),\n    ToolTip: Ext.ClassManager.getByAlias('widget.tooltip'),\n    CellBase: Ext.ClassManager.get('Ext.grid.cell.Base'),\n    WidgetCell: Ext.ClassManager.getByAlias('widget.widgetcell'),\n    Dialog: Ext.ClassManager.getByAlias('widget.dialog'),\n    Field: Ext.ClassManager.getByAlias('widget.field'),\n    FitLayout: Ext.ClassManager.getByAlias('layout.fit'),\n    TabPanel: Ext.ClassManager.getByAlias('widget.tabpanel'),\n    RendererCell: Ext.ClassManager.getByAlias('widget.renderercell')\n}\n\nexport default class ExtJSComponent extends Component {\n\n    constructor(element) {\n        super(element);\n        this.cmp = null;\n        this.el = null;\n        this._flags = null;\n        this._hostNode = null;\n        this._hostParent = null;\n        this._renderedChildren = null;\n        this._hostContainerInfo = null;\n        this._currentElement = element;\n        this._topLevelWrapper = null;\n        this.displayName = 'ExtJSComponent';\n        this.unmountSafely = false;\n\n        // needed for serializing jest snapshots when using react-test-renderer\n        if (process.env.NODE_ENV === 'test') {\n            this._renderedNodeType = ReactNodeTypes.HOST; // HOST\n            this._renderedComponent = {\n                toJSON: () => toJSON(this)\n            }\n        }\n    }\n\n    // begin React renderer methods\n\n    /**\n     * Creates an Ext JS component.\n     * This is needed by the React rendering API\n     * @param transaction\n     * @param nativeParent\n     * @param nativeContainerInfo\n     * @param context\n     * @returns {null|*}\n     */\n    mountComponent(transaction, nativeParent, nativeContainerInfo, context) {\n        const element = this._currentElement;\n\n        let renderToDOMNode;\n\n        if (nativeParent instanceof ExtJSComponent) {\n            this._hostContainerInfo = nativeParent._hostContainerInfo; // propagate _hostContainerInfo - this is needed to render dom elements inside Ext JS components\n        } else if (nativeParent) {\n            this._hostContainerInfo = nativeParent._hostContainerInfo; // propagate _hostContainerInfo - this is needed to render dom elements inside Ext JS components\n            renderToDOMNode = nativeParent._hostNode;\n        } else {\n            this._hostContainerInfo = nativeContainerInfo;\n            renderToDOMNode = nativeContainerInfo._node;\n        }\n\n        this._hostParent = nativeParent; // this is needed by ReactDOMComponentTree#getNodeFromInstance\n\n        const config = this._createInitialConfig(element, transaction, context)\n\n        let result;\n\n        if (renderToDOMNode) {\n            result = this._renderRootComponent(renderToDOMNode, config);\n        } else {\n            result = this.cmp = this.createExtJSComponent(config);\n        }\n\n        // this allows React internals to get the mounted instance for debug tools when using dangerouslyReplaceNodeWithMarkup\n        // this is probably not needed in fiber\n        if (!result.node) Object.defineProperty(result, 'node', {\n            get: () => this.el\n        });\n\n        // Ensure that componentWillUnmount is called on children.\n        // We wait until the Ext JS component is destroyed rather than calling unmountChildren in unmountComponent\n        // so that we don't unmount children during a Transition's animation.\n        this.cmp.on('destroy', () => {\n            this.unmountChildren(this.unmountSafely); \n        });\n\n        this._precacheNode();\n        \n        return result;\n    }\n\n    /**\n     * Updates the component\n     * @param nextComponent\n     * @param transaction\n     * @param context\n     */\n    receiveComponent(nextComponent, transaction, context) {\n        if (!this.cmp || this.cmp.destroyed) return;\n        const props = nextComponent.props;\n        this._rushProps(this._currentElement.props, props);\n        this.updateChildren(this._applyDefaults(props), transaction, context);\n        this._applyProps(this._currentElement.props, props);\n        this._currentElement = nextComponent;\n    }\n\n    /**\n     * Destroys the component\n     */\n    unmountComponent(safely) {\n        this.unmountSafely = safely;\n\n        if (this.cmp) {\n            if (this.cmp.destroying || this.cmp.$reactorConfig) return;\n\n            const parentCmp = getParentCmp(this.cmp);\n\n            // remember the parent and position in parent for dangerouslyReplaceNodeWithMarkup\n            // this not needed in fiber\n            let indexInParent;\n\n            if (parentCmp) {\n                if (parentCmp.indexOf) {\n                    // modern\n                    indexInParent = parentCmp.indexOf(this.cmp);\n                } else if (parentCmp.items && parentCmp.items.indexOf) {\n                    // classic\n                    indexInParent = parentCmp.items.indexOf(this.cmp);\n                }\n            }\n\n            if (this.reactorSettings.debug) console.log('destroy', this.cmp.$className);\n\n            if (Ext.navigation && Ext.navigation.View && parentCmp && parentCmp instanceof Ext.navigation.View) {\n                parentCmp.pop();\n            } else {\n                this.cmp.destroy();\n            }\n\n            // remember the parent and position in parent for dangerouslyReplaceNodeWithMarkup\n            // this not needed in fiber\n            if (this.el) {\n              this.el._extIndexInParent = indexInParent;\n              this.el._extParent = parentCmp;\n            }\n        }\n    }\n\n    /**\n     * Returns the Ext JS component instance\n     */\n    getHostNode() {\n        return this.el;\n    }\n\n    /**\n     * Returns the Ext JS component instance\n     */\n    getPublicInstance() {\n      return this.cmp;\n    }\n\n    // end react renderer methods\n\n    _renderRootComponent(renderToDOMNode, config) {\n        defaults(config, {\n            height: '100%',\n            width: '100%'\n        });\n\n        config.renderTo = renderToDOMNode;\n\n        this.cmp = this.createExtJSComponent(config);\n\n        if (Ext.isClassic) {\n            this.cmp.el.on('resize', () => this.cmp && this.cmp.updateLayout());\n            this.el = this.cmp.el.dom;\n        } else {\n            this.el = this.cmp.renderElement.dom;\n        }\n\n        return { node: this.el, children: [] };\n    }\n\n    _applyDefaults({ defaults, children }) {\n        if (defaults) {\n            return Children.map(children, child => {\n                if (child.type.prototype instanceof ExtJSComponent) {\n                    return cloneElement(child, { ...defaults, ...child.props })\n                } else {\n                    return child;\n                }\n            })\n        } else {\n            return children;\n        }\n    }\n\n    /**\n     * Creates an Ext JS component config from react element props\n     * @private\n     */\n    _createInitialConfig(element, transaction, context) {\n        const { type, props } = element;\n        const config = this._createConfig(props, true);\n        this._ensureResponsivePlugin(config);\n\n        const items = [], dockedItems = [];\n        \n        if (props.children) {\n            const children = this.mountChildren(this._applyDefaults(props), transaction, context);\n\n            for (let i=0; i<children.length; i++) {\n                const item = children[i];\n\n                if (item instanceof Ext.Base) {\n                    const prop = this._propForChildElement(item);\n\n                    if (prop) {\n                        item.$reactorConfig = true;\n                        const value = config;\n\n                        if (prop.array) {\n                            let array = config[prop.name];\n                            if (!array) array = config[prop.name] = [];\n                            array.push(item);\n                        } else {\n                            config[prop.name] = prop.value || item;\n                        }\n                    } else {\n                        (item.dock ? dockedItems : items).push(item);\n                    }\n                } else if (item.node) {\n                    items.push(wrapDOMElement(item));\n                } else if (typeof item === 'string') {\n                    // will get here when rendering html elements in react-test-renderer\n                    // no need to do anything\n                } else {\n                    throw new Error('Could not render child item: ' + item);\n                }\n            }\n        }\n\n        if (items.length) config.items = items;\n        if (dockedItems.length) config.dockedItems = dockedItems;\n\n        return config;\n    }\n\n    /**\n     * Determines whether a child element corresponds to a config or a container item based on the presence of a rel config or\n     * matching other known relationships\n     * @param {Ext.Base} item\n     */\n    _propForChildElement(item) {\n        if (item.config && item.config.rel) {\n            if (typeof item.config.rel === 'string') {\n                return { name: item.config.rel }\n            } else {\n                return item.config.rel;\n            }\n        }\n\n        const { extJSClass } = this;\n\n        if (isAssignableFrom(extJSClass, CLASS_CACHE.Button) && CLASS_CACHE.Menu && item instanceof CLASS_CACHE.Menu) {\n            return { name: 'menu', array: false };\n        } else if (isAssignableFrom(extJSClass, Ext.Component) && CLASS_CACHE.ToolTip && item instanceof CLASS_CACHE.ToolTip) {\n            return { name: 'tooltip', array: false };\n        } else if (CLASS_CACHE.Column && item instanceof CLASS_CACHE.Column) {\n            return { name: 'columns', array: true };\n        } else if (isAssignableFrom(extJSClass, CLASS_CACHE.Column) && CLASS_CACHE.CellBase && item instanceof CLASS_CACHE.CellBase) {\n            return { name: 'cell', array: false, value: this._cloneConfig(item) }\n        } else if (isAssignableFrom(extJSClass, CLASS_CACHE.WidgetCell)) {\n            return { name: 'widget', array: false, value: this._cloneConfig(item) }\n        } else if (isAssignableFrom(extJSClass, CLASS_CACHE.Dialog) && CLASS_CACHE.Button && item instanceof CLASS_CACHE.Button) {\n            return { name: 'buttons', array: true };\n        } else if (isAssignableFrom(extJSClass, CLASS_CACHE.Column) && CLASS_CACHE.Field && item instanceof CLASS_CACHE.Field) {\n            return { name: 'editor', array: false, value: this._cloneConfig(item) };\n        }\n    }\n\n    _cloneConfig(item) {\n        return { ...item.initialConfig, xclass: item.$className };\n    }\n\n    /**\n     * If the propName corresponds to an event listener (starts with \"on\" followed by a capital letter), returns the name of the event.\n     * @param {String} propName \n     * @param {String}\n     */\n    _eventNameForProp(propName) {\n        if (propName.match(/^on[A-Z]/)) {\n            return propName.slice(2).toLowerCase();\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Creates an Ext config object for this specified props\n     * @param {Object} props\n     * @param {Boolean} [includeEvents] true to convert on* props to listeners, false to exclude them\n     * @private\n     */\n    _createConfig(props, includeEvents) {\n        props = this._cloneProps(props);\n\n        const config = {};\n\n        if (includeEvents) config.listeners = {};\n\n        for (let key in props) {\n            if (props.hasOwnProperty(key)) {\n                const value = props[key];\n                const eventName = this._eventNameForProp(key);\n\n                if (eventName) {\n                    if (value && includeEvents) config.listeners[eventName] = value;\n                } else if (key === 'config') {\n                    Object.assign(config, value);\n                } else if (key !== 'children' && key !== 'defaults') {\n                    config[key.replace(/className/, 'cls')] = value;\n                }\n            }\n        }\n\n        const { extJSClass } = this;\n\n        if (isAssignableFrom(extJSClass, CLASS_CACHE.Column) && typeof config.renderer === 'function' && CLASS_CACHE.RendererCell) {\n            config.cell = config.cell || {};\n            config.cell.xtype = 'renderercell';\n        }\n\n        return config;\n    }\n\n    _ensureResponsivePlugin(config) {\n        if (config.responsiveConfig) {\n            const { plugins } = config;\n\n            if (plugins == null) {\n                config.plugins = 'responsive';\n            } else if (Array.isArray(plugins) && plugins.indexOf('responsive') === -1) {\n                plugins.push('responsive');\n            } else if (typeof plugins === 'string') {\n                if (plugins !== 'responsive') {\n                    config.plugins = [plugins, 'responsive'];\n                }\n            } else if (!plugins.resposive) {\n                plugins.responsive = true;\n            }\n        }\n    }\n\n    /**\n     * Cloning props rather than passing them directly on as configs fixes issues where Ext JS mutates configs during\n     * component initialization.  One example of this is grid columns get $initParent added when the grid initializes.\n     * @param {Object} props\n     * @private\n     */\n    _cloneProps(props) {\n        return cloneDeepWith(props, value => {\n            if (value instanceof Ext.Base || typeof(value) === 'function') {\n                return value;\n            }\n        })\n    }\n\n    _rushProps(oldProps, newProps) {\n        const rushConfigs = this.extJSClass.__reactorUpdateConfigsBeforeChildren;\n        if (!rushConfigs) return;\n        const oldConfigs = {}, newConfigs = {}\n\n        for (let name in rushConfigs) {\n            oldConfigs[name] = oldProps[name];\n            newConfigs[name] = newProps[name]\n        }\n\n        this._applyProps(oldConfigs, newConfigs);\n    }\n\n    /**\n     * Calls config setters for all react props that have changed\n     * @private\n     */\n    _applyProps(oldProps, props) {\n        const keys = union(Object.keys(oldProps), Object.keys(props));\n\n        for (let key of keys) {\n            const oldValue = oldProps[key], newValue = props[key];\n\n            if (key === 'children') continue;\n\n            if (!isEqual(oldValue, newValue)) {\n                const eventName = this._eventNameForProp(key);\n\n                if (eventName) {\n                    this._replaceEvent(eventName, oldValue, newValue);\n                } else {\n                    const setter = this._setterFor(key);\n\n                    if (setter) {\n                        const value = this._cloneProps(newValue);\n                        if (this.reactorSettings.debug) console.log(setter, newValue);\n                        this.cmp[setter](value);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Detaches the old event listener and adds the new one.\n     * @param {String} eventName \n     * @param {Function} oldHandler \n     * @param {Function} newHandler \n     */\n    _replaceEvent(eventName, oldHandler, newHandler) {\n        if (oldHandler) {\n            if (this.reactorSettings.debug) console.log(`detaching old listener for ${eventName}`);\n            this.cmp.un(eventName, oldHandler);\n        }\n\n        if (this.reactorSettings.debug) console.log(`attaching new listener for ${eventName}`);\n        this.cmp.on(eventName, newHandler);\n    }\n\n    /**\n     * Returns the name of the setter method for a given prop.\n     * @param {String} prop\n     */\n    _setterFor(prop) {\n        if (prop === 'className') {\n            prop = 'cls';\n        }\n        const name = `set${this._capitalize(prop)}`;\n        return this.cmp[name] && name;\n    }\n\n    /**\n     * Returns the name of a getter for a given prop.\n     * @param {String} prop\n     */\n    _getterFor(prop) {\n        const name = `get${this._capitalize(prop)}`;\n        return this.cmp[name] && name;\n    }\n\n    /**\n     * Capitalizes the first letter in the string\n     * @param {String} str\n     * @return {String}\n     * @private\n     */\n    _capitalize(str) {\n        return capitalize(str[0]) + str.slice(1);\n    }\n\n    _precacheNode() {\n        this._flags |= Flags.hasCachedChildNodes;\n\n        if (this.el) {\n            // will get here when rendering root component\n            precacheNode(this, this.el)\n        } else if (this.cmp.el) {\n            this._doPrecacheNode();\n        } else if (Ext.isClassic) {\n            // we get here when rendering child components due to lazy rendering\n            this.cmp.on('afterrender', this._doPrecacheNode, this, { single: true });\n        }\n    }\n\n    _doPrecacheNode() {\n        this.el = this.cmp.el.dom;\n        this.el._extCmp = this.cmp;\n        precacheNode(this, this.el)\n    }\n\n    /**\n     * Returns the child item at the given index, only counting those items which were created by Reactor\n     * @param {Number} n\n     */\n    _toReactChildIndex(n) {\n        let items = this.cmp.items;\n\n        if (!items) return n;\n        if (items.items) items = items.items;\n\n        let found=0, i, item;\n\n        for (i=0; i<items.length; i++) {\n            item = items[i];\n\n            if (item.$createdByReactor && found++ === n) {\n                return i;\n            }\n        }\n\n        return i;\n    }\n\n    /**\n     * Translates and index in props.children to an index within a config value that is an array.  Use\n     * this to determine the position of an item in props.children within the array config to which it is mapped.\n     * @param {*} prop\n     * @param {*} indexInChildren\n     */\n    _toArrayConfigIndex(prop, indexInChildren) {\n        let i=0, found=0;\n\n        Children.forEach(this.props.children, child => {\n            const propForChild = this._propForChildElement(child);\n\n            if (propForChild && propForChild.name === prop.name) {\n                if (i === indexInChildren) return found;\n                found++;\n            }\n        });\n\n        return -1;\n    }\n\n    /**\n     * Updates a config based on a child element\n     * @param {Object} prop The prop descriptor (name and array)\n     * @param {Ext.Base} value The value to set\n     * @param {Number} [index] The index of the child element in props.children\n     * @param {Boolean} [isArrayDelete=false] True if removing the item from an array\n     */\n    _mergeConfig(prop, value, index, isArrayDelete) {\n        const setter = this._setterFor(prop.name);\n        if (!setter) return;\n\n        if (value) value.$reactorConfig = true;\n\n        if (prop.array) {\n            const getter = this._getterFor(prop.name);\n            if (!getter) return;\n\n            const currentValue = this.cmp[getter]() || [];\n\n            if (isArrayDelete) {\n                // delete\n                value = currentValue.filter(item => item !== value);\n            } else if (index !== undefined) {\n                // move\n                value = currentValue.filter(item => item !== value);\n                value = value.splice(this._toArrayConfigIndex(index, prop), 0, item);\n            } else {\n                // append\n                value = currentValue.concat(value);\n            }\n        }\n\n        if (this.reactorSettings.debug) console.log(setter, value);\n\n        this.cmp[setter](value);\n    }\n\n    _ignoreChildrenOrder() {\n        // maintaining order in certain components, like Transition's container, can cause problems with animations, _reactorIgnoreOrder gives us a way to opt out in such scenarios\n        if (this.cmp._reactorIgnoreOrder) return true; \n\n        // moving the main child of a container with layout fit causes it to disappear.  Instead we do nothing, which\n        // should be ok because fit containers are not ordered\n        if (CLASS_CACHE.FitLayout && this.cmp.layout instanceof CLASS_CACHE.FitLayout) return true; \n\n        // When tab to the left of the active tab is removed, the left-most tab would always be selected as the tabs to the right are reinserted\n        if (CLASS_CACHE.TabPanel && this.cmp instanceof CLASS_CACHE.TabPanel) return true;\n    }\n}\n\n/**\n * Extend ReactMultiChild to handle inserting and moving Component instances\n * within Ext JS Containers\n */\nconst ContainerMixin = Object.assign({}, ReactMultiChild.Mixin, {\n\n    /**\n     * Moves a child component to the supplied index.\n     * @param {ExtJSComponent} child Component to move.\n     * @param {Component} afterNode The component to move after\n     * @param {number} toIndex Destination index of the element.\n     * @param {number} lastIndex Last index visited of the siblings of `child`.\n     * @protected\n     */\n    moveChild(child, afterNode, toIndex, lastIndex) {\n        if (this._ignoreChildrenOrder()) return;\n        if (toIndex === child._mountIndex) return; // only move child if the actual mount index has changed\n\n        let childComponent = toComponent(child.cmp || child.getHostNode());\n\n        const prop = this._propForChildElement(childComponent);\n\n        if (prop) {\n            this._mergeConfig(prop, childComponent, toIndex);\n        } else if (childComponent) {\n            if (childComponent.dock) {\n                this.cmp.insertDocked(toIndex, childComponent);\n            } else {\n                // reordering docked components is known to cause issues in modern\n                // place items in a container instead\n                if (childComponent.config && (childComponent.config.docked || childComponent.config.floated || childComponent.config.positioned)) return;\n\n                // removing the child first ensures that we get the new index correct\n                this.cmp.remove(childComponent, false);\n\n                const newIndex = this._toReactChildIndex(toIndex);\n\n                if (this.reactorSettings.debug) console.log(`moving ${childComponent.$className} to position ${newIndex} in ${this.cmp.$className}`);\n\n                this.cmp.insert(newIndex, childComponent);\n            }\n        }\n    },\n\n    /**\n     * Creates a child component.\n     * @param {ExtJSComponent} child Component to create.\n     * @param {Component} afterNode The component to move after\n     * @param {Component} childNode The component to insert.\n     * @protected\n     */\n    createChild(child, afterNode, childNode) {\n        const prop = this._propForChildElement(childNode);\n\n        if (prop) {\n            this._mergeConfig(prop, childNode);\n        } else {\n            if (!(childNode instanceof Ext.Base)) {\n                // we're appending a dom node\n                childNode = wrapDOMElement(childNode);\n            }\n\n            const index = this._toReactChildIndex(child._mountIndex);\n            \n            if (this.reactorSettings.debug) {\n                console.log(`inserting ${childNode.$className} into ${this.cmp.$className} at position ${index}`);\n            }\n            \n            this.cmp[childNode.dock ? 'insertDocked' : 'insert'](index, childNode);\n        }\n    },\n\n    /**\n     * Removes a child component.\n     * @param {ExtJSComponent} child Child to remove.\n     * @param {Ext.Component/HTMLElement} node The node to remove\n     * @protected\n     */\n    removeChild(child, node) {\n        const prop = child instanceof ExtJSComponent && this._propForChildElement(child.cmp);\n\n        if (prop) {\n            this._mergeConfig(prop, prop.array ? toComponent(child.cmp) : null, null, true);\n        } else {\n            if (node instanceof HTMLElement && node._extCmp && !node._extCmp.destroying) {\n                if (this.reactorSettings.debug) console.log('removing', node._extCmp.$className);\n                node._extCmp.destroy();\n            }\n            // We don't need to do anything for Ext JS components because a component is automatically removed from it parent when destroyed\n        }\n    }\n});\n\n/**\n * Wraps a dom element in an Ext Component so it can be added as a child item to an Ext Container.  We attach\n * a reference to the generated Component to the dom element so it can be destroyed later if the dom element\n * is removed when rerendering\n * @param {Object} node A React node object with node, children, and text\n * @returns {Ext.Component}\n */\nfunction wrapDOMElement(node) {\n    let contentEl = node.node;\n\n    const cmp = new Ext.Component({ \n        // We give the wrapper component a class so that developers can reset css \n        // properties (ex. box-sizing: context-box) for third party components.\n        cls: 'x-react-element' \n    });\n    \n    if (cmp.element) {\n        // modern\n        DOMLazyTree.insertTreeBefore(cmp.element.dom, node);\n    } else {\n        // classic\n        const target = document.createElement('div');\n        DOMLazyTree.insertTreeBefore(target, node);\n        cmp.contentEl = contentEl instanceof HTMLElement ? contentEl : target /* text fragment or comment */;\n    }\n\n    cmp.$createdByReactor = true;\n    contentEl._extCmp = cmp;\n\n    // this is needed for devtools when using dangerouslyReplaceNodeWithMarkup\n    // this not needed in fiber\n    cmp.node = contentEl;\n\n    return cmp;\n}\n\n/**\n * Returns the Ext Component corresponding to the given node\n * @param {Ext.Component/HTMLElement/DocumentFragment} node\n * @returns {Ext.Component}\n */\nfunction toComponent(node) {\n    if (node instanceof Ext.Base) {\n        return node;\n    } else if (node) {\n        return node._extCmp;\n    }\n}\n\n/**\n * Returns true if subClass is parentClass or a sub class of parentClass\n * @param {Ext.Class} subClass\n * @param {Ext.Class} parentClass\n * @return {Boolean}\n */\nfunction isAssignableFrom(subClass, parentClass) {\n    if (!subClass || !parentClass) return false;\n    return subClass === parentClass || subClass.prototype instanceof parentClass;\n}\n\n/**\n * Returns the parent component in both modern and classic toolkits\n * @param {Ext.Component} cmp The child component\n */\nfunction getParentCmp(cmp) {\n    if (cmp.getParent) {\n        // modern\n        return cmp.getParent();\n    } else {\n        // classic\n        return cmp.ownerCt;\n    }\n}\n\n// Patch replaceNodeWithMarkup to fix bugs with swapping null and components\n// A prime example of this is using react-router 4, which renders a null when a route fails\n// to match.  React does not call createChild/removeChild in this case, but takes a completely separate\n// path through the renderer\nconst oldReplaceNodeWithMarkup = ReactComponentEnvironment.replaceNodeWithMarkup;\n\nReactComponentEnvironment.replaceNodeWithMarkup = function(oldChild, markup) {\n    if (oldChild._extCmp) {\n        const newChild = markup instanceof Ext.Base ? markup : wrapDOMElement(markup);\n        const parent = oldChild.hasOwnProperty('_extParent') ? oldChild._extParent : getParentCmp(oldChild._extCmp);\n        const index = oldChild.hasOwnProperty('_extIndexInParent') ? oldChild._extIndexInParent : parent.indexOf(oldChild._extCmp);\n        parent.insert(index, newChild);\n        oldChild._extCmp.destroy();\n    } else {\n        oldReplaceNodeWithMarkup.apply(this, arguments);\n    }\n}\n\nObject.assign(ExtJSComponent.prototype, ContainerMixin);"]}