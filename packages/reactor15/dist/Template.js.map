{"version":3,"sources":["../src/Template.js"],"names":["Ext","window","Template","define","extend","constructor","fn","apply","values","ReactDOMServer","renderToStaticMarkup","doInsert","where","el","returnElement","target","getCachedTarget","doRender","dom","firstChild","result","Helper","unmountChildrenOnRemove","overwrite","getDom","Element","cachedTarget","document","createElement","reactElement","ReactDOM","render","parent","parentNode","parentKey","targetKey","observer","MutationObserver","mutations","forEach","removedNodes","i","length","node","unmountComponentAtNode","observe","childList"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,MAAMC,OAAOD,GAAnB;;AAEA;;;;;;;;;;;;;;AAcA,IAAME,WAAWF,IAAIG,MAAJ,CAAW,IAAX,EAAiB;AAC9BC,YAAQ,cADsB;;AAG9B;;;AAGAC,eAN8B,uBAMlBC,EANkB,EAMd;AACZ,aAAKA,EAAL,GAAUA,EAAV;AACH,KAR6B;;;AAU9B;AACAC,SAX8B,iBAWxBC,MAXwB,EAWhB;AACV,eAAOC,iBAAeC,oBAAf,CAAoC,KAAKJ,EAAL,CAAQE,MAAR,CAApC,CAAP;AACH,KAb6B;;;AAe9B;AACAG,YAhB8B,oBAgBrBC,KAhBqB,EAgBdC,EAhBc,EAgBVL,MAhBU,EAgBFM,aAhBE,EAgBa;AACvC,YAAMC,SAAS,KAAKC,eAAL,EAAf;AACA,aAAKC,QAAL,CAAcT,MAAd,EAAsBO,MAAtB;AACA,YAAMG,MAAMH,OAAOI,UAAnB;AACA,YAAMC,SAASpB,IAAIkB,GAAJ,CAAQG,MAAR,CAAeV,QAAf,CAAwBE,EAAxB,EAA4BK,GAA5B,EAAiCJ,aAAjC,EAAgDF,KAAhD,CAAf;AACA,aAAKU,uBAAL,CAA6BJ,GAA7B;AACA,eAAOE,MAAP;AACH,KAvB6B;;;AAyB9B;AACAG,aA1B8B,qBA0BpBV,EA1BoB,EA0BhBL,MA1BgB,EA0BRM,aA1BQ,EA0BO;AACjC,YAAMI,MAAMlB,IAAIwB,MAAJ,CAAWX,EAAX,CAAZ;AACA,YAAMO,SAAS,KAAKH,QAAL,CAAcT,MAAd,EAAsBU,GAAtB,CAAf;AACA,aAAKI,uBAAL,CAA6BJ,GAA7B;AACA,eAAOJ,gBAAgB,IAAId,IAAIyB,OAAR,CAAgBP,GAAhB,CAAhB,GAAuCA,GAA9C;AACH,KA/B6B;;;AAiC9B;;;;AAIAF,mBArC8B,6BAqCZ;AACd,YAAI,CAAC,KAAKU,YAAV,EAAwB,KAAKA,YAAL,GAAoBC,SAASC,aAAT,CAAuB,KAAvB,CAApB;AACxB,eAAO,KAAKF,YAAZ;AACH,KAxC6B;;;AA0C9B;;;;;;;AAOAT,YAjD8B,oBAiDrBT,MAjDqB,EAiDbO,MAjDa,EAiDL;AACrB,YAAMc,eAAe,KAAKvB,EAAL,CAAQE,MAAR,CAArB;AACAsB,2BAASC,MAAT,CAAgBF,YAAhB,EAA8Bd,MAA9B;AACA,eAAOA,OAAOI,UAAd;AACH,KArD6B;;;AAuD9B;;;;AAIAG,2BA3D8B,mCA2DNP,MA3DM,EA2DE;AAC5B,YAAMiB,SAASjB,OAAOkB,UAAtB;AACA,YAAMC,YAAY,4BAAlB;AACA,YAAMC,YAAY,yBAAlB;AACApB,eAAOoB,SAAP,IAAoB,IAApB,CAJ4B,CAIF;;AAE1B,YAAI,CAACH,OAAOE,SAAP,CAAL,EAAwB;AAAE;AACtBF,mBAAOE,SAAP,IAAoB,IAApB;;AAEA,gBAAME,WAAW,IAAIC,gBAAJ,CAAqB,qBAAa;AAC/CC,0BAAUC,OAAV,CAAkB,gBAAsB;AAAA,wBAAnBC,YAAmB,QAAnBA,YAAmB;;AACpC,yBAAK,IAAIC,IAAE,CAAX,EAAcA,IAAED,aAAaE,MAA7B,EAAqCD,GAArC,EAA0C;AACtC,4BAAIE,OAAOH,aAAaC,CAAb,CAAX;;AAEA,4BAAIE,KAAKR,SAAL,CAAJ,EAAqB;AACjBL,+CAASc,sBAAT,CAAgCD,IAAhC,EADiB,CACsB;AAC1C;AACJ;AACJ,iBARD;AASH,aAVgB,CAAjB;;AAYAP,qBAASS,OAAT,CAAiBb,MAAjB,EAAyB,EAAEc,WAAW,IAAb,EAAzB;AACH;AACJ;AAlF6B,CAAjB,CAAjB;;kBAqFe5C,Q;;AAEf","file":"Template.js","sourcesContent":["import ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\n\nconst Ext = window.Ext;\n\n/**\n * A implementation of Ext.Template that supports React elements (JSX).\n * \n * Usage:\n * \n *  const tpl = new Template(data => (\n *      <div>\n *          <div>{data.firstName} {data.lastName}</div>    \n *          <div>{data.title}</div>\n *      </div>\n *  ))\n * \n *  const html = tpl.apply({ firstName: 'Joe', lastName: 'Smith', title: 'CEO' });\n */\nconst Template = Ext.define(null, {\n    extend: 'Ext.Template', \n\n    /**\n     * @param {Function} fn A function that takes data values as an object and returns a React.Element to be rendered.\n     */\n    constructor(fn) {\n        this.fn = fn;\n    },\n\n    // overrides Ext.Template\n    apply(values) {\n        return ReactDOMServer.renderToStaticMarkup(this.fn(values));\n    },\n\n    // overrides Ext.Template\n    doInsert(where, el, values, returnElement) {\n        const target = this.getCachedTarget();\n        this.doRender(values, target);\n        const dom = target.firstChild;\n        const result = Ext.dom.Helper.doInsert(el, dom, returnElement, where);\n        this.unmountChildrenOnRemove(dom);\n        return result;\n    },\n\n    // overrides Ext.Template\n    overwrite(el, values, returnElement) {\n        const dom = Ext.getDom(el);\n        const result = this.doRender(values, dom);\n        this.unmountChildrenOnRemove(dom);\n        return returnElement ? new Ext.Element(dom) : dom;\n    },\n\n    /**\n     * @private\n     * @return {HTMLElement}\n     */\n    getCachedTarget() {\n        if (!this.cachedTarget) this.cachedTarget = document.createElement('div');\n        return this.cachedTarget;\n    },\n\n    /**\n     * Renders the result of this.fn to the specified target\n     * @private\n     * @param {Object} values Values to pass to this.fn\n     * @param {HTMLElement} target The element into which the result should be rendered.\n     * @return {HTMLElement} The newly rendered element\n     */\n    doRender(values, target) {\n        const reactElement = this.fn(values);\n        ReactDOM.render(reactElement, target);\n        return target.firstChild;\n    },\n\n    /**\n     * Ensures that componentWillUnmount is called on each descendent component when the target node is removed from the DOM.\n     * @param {Node} target A node containing a React tree\n     */\n    unmountChildrenOnRemove(target) {\n        const parent = target.parentNode;\n        const parentKey = '$reactorObserveRemoveChild';\n        const targetKey = '$reactorUnmountOnRemove';\n        target[targetKey] = true; // we tag the target with $reactorUnmountOnRemove so we know it has a React tree to unmount when removed\n\n        if (!parent[parentKey]) { // we tag the parent with $reactorObserveRemoveChild so we can ensure we are only observing it once\n            parent[parentKey] = true;\n\n            const observer = new MutationObserver(mutations => {\n                mutations.forEach(({ removedNodes }) => {\n                    for (let i=0; i<removedNodes.length; i++) {\n                        let node = removedNodes[i];\n\n                        if (node[targetKey]) {\n                            ReactDOM.unmountComponentAtNode(node); // Unmount the React tree when the target dom node is removed.\n                        }\n                    }\n                })\n            });\n            \n            observer.observe(parent, { childList: true });\n        }\n    }\n});\n\nexport default Template;\n\n// Hook Ext.XTemplate.get so that we can just pass a function that returns JSX in place of a XTemplate.\n\n"]}